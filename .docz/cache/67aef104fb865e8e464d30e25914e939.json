{"remainingRequest":"/Users/frontend/Workspace/proyectos/demo-docz/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/frontend/Workspace/proyectos/demo-docz/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":false,\"typescript\":true,\"parseProps\":false}]],\"plugins\":[[\"/Users/frontend/Workspace/proyectos/demo-docz/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}],\"/Users/frontend/Workspace/proyectos/demo-docz/node_modules/react-hot-loader/babel.js\"],\"babelrc\":false,\"cacheCompression\":false,\"compact\":false}!/Users/frontend/Workspace/proyectos/demo-docz/node_modules/react-docgen-typescript-loader/dist/index.js?{}!/Users/frontend/Workspace/proyectos/demo-docz/docs/Button.tsx","dependencies":[{"path":"/Users/frontend/Workspace/proyectos/demo-docz/docs/Button.tsx","mtime":1549315300000},{"path":"/Users/frontend/Workspace/proyectos/demo-docz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/frontend/Workspace/proyectos/demo-docz/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/frontend/Workspace/proyectos/demo-docz/node_modules/react-docgen-typescript-loader/dist/index.js","mtime":1547997814000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/frontend/Workspace/proyectos/demo-docz/docs/Button.tsx\";\n\n(function () {\n  var enterModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).enterModule;\n  enterModule && enterModule(module);\n})();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    border: none;\\n    cursor: pointer;\\n    color: white;\\n    background-color: #4762ea;\\n    font-size: 14px;\\n    border-radius: 4px;\\n    padding: 8px 15px;\\n    \", \"\\n    \", \"\\n    \", \"\\n    \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport styled from 'styled-components';\nvar StyledButton = styled.button(_templateObject(), function (props) {\n  return props.fullwidth === true && \"\\n        width: 100%;\\n    \";\n}, function (props) {\n  return props.size === 'small' && \"\";\n}, function (props) {\n  return props.size === 'medium' && \"\\n        font-size: 17px;\\n        padding: 19px 18px;\\n    \";\n}, function (props) {\n  return props.size === 'large' && \"\\n        font-size: 20px;\\n        padding: 16px 21px;\\n    \";\n});\nexport var Button = function Button(_ref) {\n  var children = _ref.children,\n      fullwidth = _ref.fullwidth,\n      size = _ref.size;\n  return React.createElement(StyledButton, {\n    fullwidth: fullwidth,\n    size: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, children);\n};\nButton.propTypes = {\n  children: PropTypes.any,\n  icon: PropTypes.string,\n  loading: PropTypes.bool,\n  size: PropTypes.string,\n  fullwidth: PropTypes.bool\n};\n\ntry {\n  // @ts-ignore\n  Button.displayName = \"Button\"; // @ts-ignore\n\n  Button.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Button\",\n    \"props\": {\n      \"icon\": {\n        \"defaultValue\": null,\n        \"description\": \"nombre del icono\",\n        \"name\": \"icon\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"loading\": {\n        \"defaultValue\": null,\n        \"description\": \"icono de carga\",\n        \"name\": \"loading\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"size\": {\n        \"defaultValue\": null,\n        \"description\": \"tama\\xF1o del boton\",\n        \"name\": \"size\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"fullwidth\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"fullwidth\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"boolean\"\n        }\n      },\n      \"onClick\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onClick\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"Function\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"docs/Button.tsx#Button\"] = {\n      docgenInfo: Button.__docgenInfo,\n      name: \"Button\",\n      path: \"docs/Button.tsx#Button\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\n;\n\n(function () {\n  var reactHotLoader = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).default;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(StyledButton, \"StyledButton\", \"/Users/frontend/Workspace/proyectos/demo-docz/docs/Button.tsx\");\n  reactHotLoader.register(Button, \"Button\", \"/Users/frontend/Workspace/proyectos/demo-docz/docs/Button.tsx\");\n})();\n\n;\n\n(function () {\n  var leaveModule = (typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal : require('react-hot-loader')).leaveModule;\n  leaveModule && leaveModule(module);\n})();",{"version":3,"sources":["/Users/frontend/Workspace/proyectos/demo-docz/docs/Button.tsx"],"names":["React","PropTypes","styled","StyledButton","button","props","fullwidth","size","Button","children","propTypes","any","icon","string","loading","bool","displayName","__docgenInfo","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","__react_docgen_typescript_loader_error"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAcA,IAAMC,YAAY,GAAGD,MAAM,CAACE,MAAV,oBAQZ,UAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,SAAN,KAAoB,IAApB,kCAAX;AAAA,CARY,EAWZ,UAACD,KAAD;AAAA,SAAWA,KAAK,CAACE,IAAN,KAAe,OAAf,MAAX;AAAA,CAXY,EAYZ,UAACF,KAAD;AAAA,SAAWA,KAAK,CAACE,IAAN,KAAe,QAAf,mEAAX;AAAA,CAZY,EAgBZ,UAACF,KAAD;AAAA,SAAWA,KAAK,CAACE,IAAN,KAAe,OAAf,mEAAX;AAAA,CAhBY,CAAlB;AAsBA,OAAO,IAAMC,MAAuB,GAAG,SAA1BA,MAA0B;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaH,SAAb,QAAaA,SAAb;AAAA,MAAwBC,IAAxB,QAAwBA,IAAxB;AAAA,SACnC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAED,SAAzB;AAAoC,IAAA,IAAI,EAAEC,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,QADL,CADmC;AAAA,CAAhC;AAMPD,MAAM,CAACE,SAAP,GAAmB;AACfD,EAAAA,QAAQ,EAAER,SAAS,CAACU,GADL;AAEfC,EAAAA,IAAI,EAAEX,SAAS,CAACY,MAFD;AAGfC,EAAAA,OAAO,EAAEb,SAAS,CAACc,IAHJ;AAIfR,EAAAA,IAAI,EAAEN,SAAS,CAACY,MAJD;AAKfP,EAAAA,SAAS,EAAEL,SAAS,CAACc;AALN,CAAnB;;AAME,IAAI;AACF;AACAP,EAAAA,MAAM,CAACQ,WAAP,GAAqB,QAArB,CAFE,CAGF;;AACAR,EAAAA,MAAM,CAACS,YAAP,GAAsB;AAAE,mBAAe,EAAjB;AAAqB,mBAAe,QAApC;AAA8C,aAAS;AAAE,cAAQ;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,kBAAvC;AAA2D,gBAAQ,MAAnE;AAA2E,oBAAY,KAAvF;AAA8F,gBAAQ;AAAE,kBAAQ;AAAV;AAAtG,OAAV;AAAwI,iBAAW;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,gBAAvC;AAAyD,gBAAQ,SAAjE;AAA4E,oBAAY,KAAxF;AAA+F,gBAAQ;AAAE,kBAAQ;AAAV;AAAvG,OAAnJ;AAAmR,cAAQ;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,qBAAvC;AAAgE,gBAAQ,MAAxE;AAAgF,oBAAY,KAA5F;AAAmG,gBAAQ;AAAE,kBAAQ;AAAV;AAA3G,OAA3R;AAA8Z,mBAAa;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,WAAnD;AAAgE,oBAAY,KAA5E;AAAmF,gBAAQ;AAAE,kBAAQ;AAAV;AAA3F,OAA3a;AAA+hB,iBAAW;AAAE,wBAAgB,IAAlB;AAAwB,uBAAe,EAAvC;AAA2C,gBAAQ,SAAnD;AAA8D,oBAAY,KAA1E;AAAiF,gBAAQ;AAAE,kBAAQ;AAAV;AAAzF;AAA1iB;AAAvD,GAAtB,CAJE,CAKF;;AACA,MAAI,OAAOC,uBAAP,KAAmC,WAAvC,EACI;AACAA,IAAAA,uBAAuB,CAAC,wBAAD,CAAvB,GAAoD;AAAEC,MAAAA,UAAU,EAAEX,MAAM,CAACS,YAArB;AAAmCG,MAAAA,IAAI,EAAE,QAAzC;AAAmDC,MAAAA,IAAI,EAAE;AAAzD,KAApD;AACP,CATC,CAUF,OAAOC,sCAAP,EAA+C,CAAG;;;;;;;;;;;0BA5C5CnB,Y;0BAsBOK,M","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\ninterface Props {\n    children?: React.ReactChildren;\n    /** nombre del icono */\n    icon?: string;\n    /** icono de carga */\n    loading?: boolean;\n    /** tamaÃ±o del boton */\n    size?: string;\n    fullwidth?: boolean;\n    onClick?: Function;\n}\n\nconst StyledButton = styled.button`\n    border: none;\n    cursor: pointer;\n    color: white;\n    background-color: #4762ea;\n    font-size: 14px;\n    border-radius: 4px;\n    padding: 8px 15px;\n    ${(props) => props.fullwidth === true && `\n        width: 100%;\n    `}\n    ${(props) => props.size === 'small' && ``}\n    ${(props) => props.size === 'medium' && `\n        font-size: 17px;\n        padding: 19px 18px;\n    `}\n    ${(props) => props.size === 'large' && `\n        font-size: 20px;\n        padding: 16px 21px;\n    `}\n`;\n\nexport const Button: React.FC<Props> = ({ children, fullwidth, size }) => (\n    <StyledButton fullwidth={fullwidth} size={size}>\n        {children}\n    </StyledButton>\n);\n\nButton.propTypes = {\n    children: PropTypes.any,\n    icon: PropTypes.string,\n    loading: PropTypes.bool,\n    size: PropTypes.string,\n    fullwidth: PropTypes.bool\n};try {\n    // @ts-ignore\n    Button.displayName = \"Button\";\n    // @ts-ignore\n    Button.__docgenInfo = { \"description\": \"\", \"displayName\": \"Button\", \"props\": { \"icon\": { \"defaultValue\": null, \"description\": \"nombre del icono\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"loading\": { \"defaultValue\": null, \"description\": \"icono de carga\", \"name\": \"loading\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"size\": { \"defaultValue\": null, \"description\": \"tama\\u00F1o del boton\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"fullwidth\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"fullwidth\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"onClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onClick\", \"required\": false, \"type\": { \"name\": \"Function\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"docs/Button.tsx#Button\"] = { docgenInfo: Button.__docgenInfo, name: \"Button\", path: \"docs/Button.tsx#Button\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]}]}